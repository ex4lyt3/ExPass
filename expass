#!/bin/bash

OPTION=$1

mainDir=~/test/.expass

#Check if files exist
if [ -d $mainDir ] && [ -d $mainDir/data ]  && [ -f $mainDir/verify_key ];
then
    echo " ________          _______ 
|        \\        |       \\
| ▓▓▓▓▓▓▓▓__    __| ▓▓▓▓▓▓▓\\ ______   _______  _______
| ▓▓__   |  \\  /  \\ ▓▓__/ ▓▓|      \ /       \/       \\
| ▓▓  \\   \\▓▓\/  ▓▓ ▓▓    ▓▓ \\▓▓▓▓▓▓\  ▓▓▓▓▓▓▓  ▓▓▓▓▓▓▓
| ▓▓▓▓▓    >▓▓  ▓▓| ▓▓▓▓▓▓▓ /      ▓▓\▓▓    \\ \\▓▓    \\
| ▓▓_____ /  ▓▓▓▓\\| ▓▓     |  ▓▓▓▓▓▓▓_\▓▓▓▓▓▓\\_\\▓▓▓▓▓▓\\
| ▓▓     \\  ▓▓ \\▓▓\\ ▓▓      \\▓▓    ▓▓       ▓▓       ▓▓
 \\▓▓▓▓▓▓▓▓\\▓▓   \\▓▓\\▓▓       \\▓▓▓▓▓▓▓\▓▓▓▓▓▓▓ \\▓▓▓▓▓▓▓
                                                v0.1"
else 
    echo "ExPass has not been set up. (Essential directories do not exist)"
    echo "Solution:"
    exit
fi

if [ $# == 0 ]
then 
    echo "No arguments supplied."
    exit
fi

#Check for password
verifyPassword()
{
    read -sp "Please enter your password " masterPassword
    keyHash=$(openssl enc -nosalt -aes-256-cbc -pbkdf2 -k $masterPassword -P | shasum -a 512)
    verifyKey=$(cat $mainDir/verify_key)
    echo $verify_key
    if [[ $keyHash == $verifyKey ]]
    then
        echo "Password verified."
    else
        echo "Password incorrect. Please retry."
        exit
    fi
}

#Options
case $OPTION in
-e | --encrypt)
    #Encrypts
    verifyPassword
    echo $masterPassword
    read -p "Enter a title for your password entry: " titleEntry
    read -sp "Enter the password for your new entry: " passwordEntry
    key=$(openssl enc -nosalt -aes-256-cbc -pbkdf2 -k $masterPassword -P | grep "key")
    iv=$(openssl enc -nosalt -aes-256-cbc -pbkdf2 -k $masterPassword -P | grep "iv")
    openssl enc -d -nosalt -aes-256-cbc -pbkdf2 -in $mainDir/data/index.enc -out $mainDir/data/index -base64 -K "${key:4:64}" -iv "${iv:4:32}"
    randomNumber=$RANDOM  
    checkIfRandom()
    {
        if [[ -f $mainDir/data/$randomNumber ]];
        then
            randomNumber=$RANDOM
            checkIfRandom
            fi
    }
    checkIfRandom
    echo "$titleEntry:$passwordEntry" > $mainDir/data/$randomNumber
    openssl enc -e -nosalt -aes-256-cbc -pbkdf2 -in $mainDir/data/$randomNumber -out $mainDir/data/$randomNumber -base64 -K "${key:4:64}" -iv "${iv:4:32}"
    echo "$titleEntry:$mainDir/data/$randomNumber" >> $mainDir/data/index
    openssl enc -e -nosalt -aes-256-cbc -pbkdf2 -in $mainDir/data/index -out $mainDir/data/index.enc -base64 -K "${key:4:64}" -iv "${iv:4:32}"
    #rm $mainDir/data/index
    exit
    ;;
-d | --decrypt)

    cut -d: -f 2 <<< "string:efwjiefjiwjifwjei"
    exit
    ;;
-s | --search)
    verifyPassword
    if [ $# > 1 ] 
    then
    key=$(openssl enc -nosalt -aes-256-cbc -pbkdf2 -k $masterPassword -P | grep "key")
    iv=$(openssl enc -nosalt -aes-256-cbc -pbkdf2 -k $masterPassword -P | grep "iv")
    openssl enc -d -nosalt -aes-256-cbc -pbkdf2 -in $mainDir/data/index.enc -out $mainDir/data/index -base64 -K "${key:4:64}" -iv "${iv:4:32}"
    cat $mainDir/data/index | grep "${@:2}" "all arguments after first"
    else
    echo "Invalid argument(s) supplied."
    fi
    exit
    ;;
-l | --list)
    verifyPassword
    key=$(openssl enc -nosalt -aes-256-cbc -pbkdf2 -k $masterPassword -P | grep "key")
    iv=$(openssl enc -nosalt -aes-256-cbc -pbkdf2 -k $masterPassword -P | grep "iv")
    openssl enc -d -nosalt -aes-256-cbc -pbkdf2 -in $mainDir/data/index.enc -out $mainDir/data/index -base64 -K "${key:4:64}" -iv "${iv:4:32}"
    cat $mainDir/data/index 
    #rm $mainDir/data/index
    exit
    ;;
--decrypt-all)
    exit
    ;;
--help)
    exit
    ;;
*) 
    #If no arguments are supplied
    echo "Invalid option - '${OPTION}' detected"
    echo "--help for more information"
    exit
    ;;
esac